{"version":3,"sources":["components/message-list-item/index.js","components/message-list-item/message-list-item.js","components/messagestore-service-context/messagestore-service-context.js","components/hoc/index.js","components/hoc/with-messagestore-service.js","actions/index.js","components/spinner/index.js","components/spinner/spinner.js","components/message-list/message-list.js","components/message-list/index.js","services/data-to-localStorage.js","components/header/header.js","components/header/index.js","reducers/index.js","store.js","services/notification.js","services/messegestore-service.js","components/entry-field/entry-field.js","components/entry-field/index.js","pages/home-page.js","pages/message-page.js","components/app/index.js","components/app/app.js","components/error-indicator/index.js","components/error-indicator/error-indicator.js","components/error-boundry/index.js","components/error-boundry/error-boundry.js","index.js"],"names":["MessageListItem","_ref","messageObj","time","from","message","react_default","a","createElement","className","React","createContext","MessagestoreServiceProvider","Provider","MessagestoreServiceConsumer","Consumer","withMessageStoreService","Wrapped","props","messagestoreService","Object","assign","messagesLoaded","newMessages","type","payload","changeNickName","newNick","nickName","Spinner","MessageList","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","numberOfShowedMessages","OnTheBottom","myRef","createRef","_this$props","getMessages","then","data","console","log","current","scrollTop","scrollHeight","arrayForLastMessages","_this2","_this$props2","messages","loading","components_spinner","length","slice","ref","onScroll","setState","map","key","id","components_message_list_item","Component","connect","dispatch","bindActionCreators","saveObj","stateObj","localStorage","setItem","JSON","stringify","getItem","Header","updateNickNameValue","event","target","value","restorePlaceholder","parse","href","onChange","placeholder","onClick","initialState","connection","reducer","arguments","undefined","action","objectSpread","changenickName","store","createStore","notifyMe","nick","hidden","document","msHidden","webkitHidden","window","Notification","permission","concat","icon","body","requestPermission","alert","notifyMein","MessagestoreService","arrayForSendingOffline","handleData","result","reverse","mes","moment","format","oldState","resArr","toConsumableArray","_this$data","onlineStatus","socket","send","initialConnection","url","WebSocket","onopen","getState","addEventListener","onclose","wasClean","code","reason","tryToReonnect","onerror","error","setTimeout","sendMessage","navigator","onLine","push","Promise","resolve","reject","onmessage","e","EntryField","inputValue","field","updateInputValue","pressButton","elem","KeyboardEvent","bubbles","cancelable","keyCode","shiftKey","dispatchEvent","enterPress","preventDefault","stringWithoutSpace","trim","onKeyDown","HomePage","Fragment","components_header","components_message_list","q","components_entry_field","MessagePage","App","react_router","path","component","exact","ErrorIndicator","ErrorBoundry","hasError","components_error_indicator","children","ReactDOM","render","es","error_boundry","react_router_dom","components_app","getElementById"],"mappings":"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","file":"static/js/main.3a587d8c.chunk.js","sourcesContent":["import MessageListItem from './message-list-item';\r\n\r\nexport default MessageListItem;","import React from 'react';\r\nimport './message-list-item.css';\r\n\r\nconst MessageListItem = ({messageObj}) => {\r\n\r\n    const {time, from, message} = messageObj;\r\n\r\n    return(<div className='messageContainer'>\r\n                <div className='time'>{time}</div>\r\n                <div className='from'>{from}</div>\r\n                <div className='message'>{message}</div>\r\n           </div>)\r\n}\r\n\r\nexport default MessageListItem;","import React from 'react';\r\n\r\nconst {\r\n    Provider: MessagestoreServiceProvider,\r\n    Consumer: MessagestoreServiceConsumer\r\n} = React.createContext();\r\n\r\nexport {MessagestoreServiceProvider, MessagestoreServiceConsumer};","import withMessageStoreService from './with-messagestore-service'\r\n\r\nexport default withMessageStoreService;","import React from 'react';\r\nimport {MessagestoreServiceConsumer} from '../messagestore-service-context';\r\n\r\nconst withMessageStoreService = () => (Wrapped) => {\r\n\r\n    return (props) => {\r\n        return (\r\n            <MessagestoreServiceConsumer>\r\n                {\r\n                    (messagestoreService) => {\r\n                        // console.log(props)\r\n                        return <Wrapped {...props} messagestoreService={messagestoreService}/>\r\n                    }\r\n                }\r\n            </MessagestoreServiceConsumer>\r\n        );\r\n    }\r\n};\r\n\r\nexport default withMessageStoreService;","const messagesLoaded = (newMessages) => {\r\n    return {\r\n        type: 'MESSAGES_LOADED',\r\n        payload: newMessages\r\n    };\r\n};\r\n\r\n\r\nconst lostConnection = () => {\r\n    return {\r\n        type: 'CONNECTION_LOST',\r\n        connection: false\r\n    }\r\n}\r\n\r\nconst restoreConnection = () => {\r\n    return {\r\n        type: 'CONNECTION_RESTORE',\r\n        connection: true\r\n    }\r\n}\r\n\r\nconst changeNickName = (newNick) => {\r\n    return {\r\n        type: 'NICK_CHANGE',\r\n        nickName: newNick\r\n    }\r\n}\r\n\r\nexport {\r\n    messagesLoaded,\r\n    lostConnection,\r\n    restoreConnection,\r\n    changeNickName\r\n};","import Spinner from './spinner';\r\n\r\nexport default Spinner;","import React from 'react';\r\nimport './spinner.css';\r\n\r\nconst Spinner = () => {\r\n    return <div>Spinner</div>\r\n}\r\n\r\nexport default Spinner;","import React, {Component} from 'react';\r\nimport MessageListItem from '../message-list-item';\r\nimport {connect} from 'react-redux';\r\nimport withMessageStoreService  from '../hoc';\r\nimport {messagesLoaded}  from  '../../actions';\r\nimport {bindActionCreators} from 'redux';\r\nimport Spinner  from '../spinner';\r\nimport './message-list.css';\r\n\r\nclass MessageList extends Component {\r\n\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            numberOfShowedMessages: 30\r\n        }\r\n        this.OnTheBottom = true; \r\n        this.myRef = React.createRef()\r\n    }\r\n\r\n    componentDidMount(){\r\n    const {messagestoreService, messagesLoaded} = this.props;\r\n         messagestoreService.getMessages().then((data) => messagesLoaded(data));\r\n        //  this.myRef.current.scrollTop = this.myRef.current.scrollHeight;\r\n         \r\n    }\r\n\r\n    componentDidUpdate(){\r\n        console.log('update')\r\n        if (this.OnTheBottom) {this.myRef.current.scrollTop = this.myRef.current.scrollHeight}\r\n        // this.myRef.current.scrollTop = this.myRef.current.scrollHeight;\r\n    }\r\n\r\n    render () {\r\n         const {messages, loading} = this.props;\r\n\r\n         if(loading){return <Spinner />}\r\n\r\n         let arrayForLastMessages;\r\n\r\n         if ( messages.length > 30 ) {\r\n            arrayForLastMessages = messages.slice(-this.state.numberOfShowedMessages)\r\n         }\r\n         else{\r\n            arrayForLastMessages = messages;\r\n         }\r\n      \r\n\r\n\r\n         return (\r\n                <div className = 'chatContainer' ref={this.myRef} onScroll={() => {\r\n                        //  console.log(this.myRef.current.scrollTop)\r\n                        //  console.log(this.state.numberOfShowedMessages)\r\n                        // console.log(this.myRef.current.scrollHeight - this.myRef.current.scrollTop)\r\n                        //   console.log(this.myRef.current.scrollHeight)\r\n                        if ((this.myRef.current.scrollHeight - this.myRef.current.scrollTop) > 600) {\r\n                        this.OnTheBottom = false; \r\n                        }\r\n                        else{\r\n                            this.OnTheBottom = true;\r\n                        }\r\n                        if (this.myRef.current.scrollTop < 100) {\r\n                            if (arrayForLastMessages.length + 30 < messages.length ){\r\n                                this.setState({numberOfShowedMessages: this.state.numberOfShowedMessages + 30})\r\n                                }\r\n                            else{\r\n                                this.setState({numberOfShowedMessages: messages.length})\r\n                                }                          \r\n                            }\r\n                    }}>\r\n\r\n                   { arrayForLastMessages.map((message) => {\r\n                        return (\r\n                            <div key={message.id}><MessageListItem messageObj={message}/></div>\r\n                        )\r\n                    })}\r\n                </div>\r\n         ); \r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        messages: state.messages,\r\n        loading: state.loading\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return bindActionCreators({messagesLoaded}, dispatch)  \r\n}\r\n\r\nexport default withMessageStoreService()(connect(mapStateToProps, mapDispatchToProps)(MessageList));","import MessageList from './message-list';\r\n\r\nexport default MessageList;","function saveObj(nickName) {\r\n    const stateObj = {nickName: nickName}\r\n    localStorage.setItem('stateObj', JSON.stringify(stateObj));\r\n    console.log(localStorage.getItem('stateObj'))\r\n};\r\n\r\n\r\n\r\n\r\nexport default saveObj;\r\n\r\n","import React from 'react';\r\nimport './header.css'\r\nimport saveObj from '../../services/data-to-localStorage';\r\nimport {connect} from 'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\nimport {changeNickName}  from  '../../actions';\r\nimport withMessageStoreService  from '../hoc';\r\n// import '../../services/messegestore-service';\r\n\r\nclass Header extends React.Component{\r\nstate = {\r\n    nickName: 'defaultNick'\r\n}\r\n\r\nupdateNickNameValue = (event) => {\r\n    this.setState({\r\n        nickName: event.target.value,\r\n    });\r\n}\r\n\r\nrestorePlaceholder = () => {\r\n    if (JSON.parse(localStorage.getItem('stateObj'))){\r\n        return JSON.parse(localStorage.getItem('stateObj')).nickName;\r\n      }\r\n    else{\r\n        return 'defaultNick'\r\n    }  \r\n}\r\n\r\nrender(){\r\n    return(<header>\r\n        {/* <div className='statusOnline'></div> */}\r\n            <a className='logo' href='#'>Chat</a>\r\n                <div className='nickNameContainer'>\r\n                    <input \r\n                    onChange = {(event) => this.updateNickNameValue(event)}\r\n                    className ='inputNickName'\r\n                    type = 'text'\r\n                    placeholder= {this.restorePlaceholder()}>\r\n                    </input>\r\n                    <button onClick={() => {\r\n                                                changeNickName(this.state.nickName);\r\n                                                saveObj(this.state.nickName)\r\n                                            \r\n                                            }}>ChangeNick</button>\r\n            </div>\r\n           </header>)\r\n    }\r\n};\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        nickName: state.nickName,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return bindActionCreators({changeNickName}, dispatch)  \r\n}\r\n\r\n\r\nexport default withMessageStoreService()(connect(mapStateToProps, mapDispatchToProps)(Header));","import Header from './header';\r\n\r\nexport default Header;\r\n\r\n","\r\nconst initialState = {\r\n    messages: [],\r\n    loading: true,\r\n    connection: false,\r\n    nickName: 'defaultNick',\r\n}\r\n\r\nconst reducer  = (state=initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case 'MESSAGES_LOADED':\r\n            return {\r\n                messages: action.payload,\r\n                loading: false,\r\n                connection: true,\r\n                nickName: 'defaultNick'\r\n            };\r\n\r\n        case 'CONNECTION_LOST':\r\n                return {\r\n                ...state,\r\n                connection: action.connection\r\n                };    \r\n\r\n        case 'CONNECTION_RESTORE':\r\n                return {\r\n                    ...state,\r\n                    connection: action.connection\r\n                    };           \r\n        case 'NICK_CHANGE':\r\n                    return {\r\n                    ...state,\r\n                    nickName: action.changenickName\r\n                    };                      \r\n\r\n            default:\r\n                    return state;  \r\n    }\r\n\r\n\r\n}\r\n\r\nexport default reducer;","import  { createStore } from 'redux';\r\n\r\nimport reducer  from './reducers'\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport default store;","\r\nfunction notifyMe(nick, message) {\r\n    let hidden, visibilityChange; \r\n    if (typeof document.hidden !== \"undefined\") { // Opera 12.10 and Firefox 18 and later support \r\n      hidden = \"hidden\";\r\n      visibilityChange = \"visibilitychange\";\r\n    } else if (typeof document.msHidden !== \"undefined\") {\r\n      hidden = \"msHidden\";\r\n      visibilityChange = \"msvisibilitychange\";\r\n    } else if (typeof document.webkitHidden !== \"undefined\") {\r\n      hidden = \"webkitHidden\";\r\n      visibilityChange = \"webkitvisibilitychange\";\r\n    }\r\n    \r\n      if (document[hidden]) {notifyMein(nick, message)} \r\n     \r\n\r\n\r\n}\r\n\r\nfunction notifyMein(nick, message) {\r\n    console.log('note')\r\n    if (!(\"Notification\" in window)) {\r\n      alert(\"This browser does not support desktop notification\");\r\n    }\r\n  \r\n    else if (window.Notification.permission === \"granted\") {\r\n      const notification = new Notification(`${nick}`, {\r\n        icon: 'http://cdn.sstatic.net/stackexchange/img/logos/so/so-icon.png',\r\n        body: message,\r\n       });\r\n    }\r\n  \r\n    else if (Notification.permission !== 'denied') {\r\n      Notification.requestPermission(function (permission) {\r\n        if (permission === \"granted\") {\r\n          const notification = new Notification(`${nick}\\n${message}`);\r\n        }\r\n      });\r\n    }\r\n  }    \r\n\r\n\r\n\r\n  // function notifyMe(nick, message) {\r\n  //   console.log('note')\r\n  //   if (!(\"Notification\" in window)) {\r\n  //     alert(\"This browser does not support desktop notification\");\r\n  //   }\r\n  \r\n  //   else if (window.Notification.permission === \"granted\") {\r\n  //     const notification = new Notification(`${nick}\\n${message}`);\r\n  //   }\r\n  \r\n  //   else if (Notification.permission !== 'denied') {\r\n  //     Notification.requestPermission(function (permission) {\r\n  //       if (permission === \"granted\") {\r\n  //         const notification = new Notification(`${nick}\\n${message}`);\r\n  //       }\r\n  //     });\r\n  //   }\r\n  // }    \r\n\r\n  export  default notifyMe;","import moment from 'moment';\r\nimport store from '../store';\r\nimport {messagesLoaded, lostConnection, restoreConnection}  from  '../actions';\r\nimport notifyMe from './notification';\r\n;\r\n\r\nclass MessagestoreService {\r\n    data  = []; \r\n    socket;\r\n    arrayForSendingOffline = [];\r\n    // onmessage = false;\r\n\r\n  \r\n    handleData = (data) => {\r\n      \r\n      let result = JSON.parse(data).reverse();\r\n      result.map((mes) => {return mes.time = moment(mes.time).format('MMMM Do YYYY, h:mm:ss a')})\r\n      const oldState = this.data;\r\n      const resArr = [...oldState, ...result];\r\n      this.data = resArr;\r\n      store.dispatch(messagesLoaded(this.data));\r\n      const {from, message} = this.data[this.data.length-1]\r\n      console.log(this.data.length)\r\n      notifyMe(from, message)\r\n     \r\n      return this.data;\r\n    }\r\n\r\n    onlineStatus = () => {\r\n        this.arrayForSendingOffline.map((mes) => {\r\n        const {from, message} = mes;\r\n        this.socket.send(JSON.stringify({\r\n          from: from,\r\n          message: message\r\n        }))\r\n      })\r\n      this.arrayForSendingOffline = [];\r\n    }\r\n\r\n    initialConnection = (url) => {\r\n      this.socket = new WebSocket(url);\r\n\r\n      this.socket.onopen = () => {\r\n        console.log(\"Соединение установлено.\");\r\n        console.log(store.getState());\r\n        store.dispatch(restoreConnection());\r\n      };\r\n      \r\n      window.addEventListener('online',  () => {this.onlineStatus()});\r\n      // window.addEventListener('offline',  () => {this.onlineStatus()});\r\n\r\n\r\n\r\n      this.socket.onclose = (event) => {\r\n        if (event.wasClean) {\r\n          console.log('Соединение закрыто чисто');\r\n        } else {\r\n          console.log('Обрыв соединения'); \r\n        }\r\n        console.log('Код: ' + event.code + ' причина: ' + event.reason);\r\n        store.dispatch(lostConnection());\r\n        this.tryToReonnect()\r\n      };\r\n\r\n      this.socket.onerror = (error) => {\r\n        console.log(\"Ошибка \" + error);\r\n        store.dispatch(lostConnection());\r\n        // this.tryToReonnect()\r\n      };\r\n\r\n      return this.socket\r\n    }\r\n\r\n\r\n    tryToReonnect = () => {\r\n      setTimeout(this.getMessages, 2000)\r\n       return  \r\n        \r\n      \r\n      // else{console.log(store.getState());}\r\n    }\r\n\r\n    sendMessage = (message) =>{\r\n      let from;\r\n      console.log('перед отправкой', navigator.onLine)\r\n      console.log('перед отправкой', store.getState())\r\n      if (JSON.parse(localStorage.getItem('stateObj'))){\r\n        from = JSON.parse(localStorage.getItem('stateObj')).nickName;\r\n      }\r\n      else{\r\n        from = store.getState().nickName\r\n      }\r\n      // console.log(message)\r\n      if (navigator.onLine) {\r\n        this.socket.send(JSON.stringify({\r\n          from: from,\r\n          message: message\r\n        }))\r\n      }\r\n      else{\r\n        this.arrayForSendingOffline.push({\r\n          from: from,\r\n          message: message\r\n        })\r\n      }\r\n    }\r\n\r\n\r\n    getMessages = () => {\r\n      let socket = this.initialConnection(\"ws://st-chat.shas.tel\");\r\n\r\n      return new Promise((resolve, reject) => {\r\n          // console.log(this.onmessage)\r\n          // if(!this.onmessage){\r\n          //   this.onmessage = true;\r\n            this.data = [];\r\n            socket.onmessage = (e) => {\r\n              if (e.data) {\r\n                resolve(this.handleData(e.data));\r\n                }\r\n              else(reject('Данные не получены'))}\r\n          // }\r\n      \r\n        })\r\n    }\r\n  }\r\n\r\n\r\n  export default MessagestoreService;","import React, {Component} from 'react';\r\nimport withMessageStoreService  from '../hoc';\r\nimport '../../services/messegestore-service';\r\n\r\n\r\n\r\nimport './entry-field.css'\r\n\r\n class EntryField extends Component {\r\n\r\n    state = {\r\n        inputValue: '',\r\n        field:''\r\n      };\r\n\r\n    updateInputValue = (event) => {\r\n            this.setState({\r\n              inputValue: event.target.value,\r\n              field: event.target\r\n            });\r\n        }\r\n\r\n    pressButton = () => {\r\n\r\n        if(this.state.inputValue){\r\n            const elem = this.state.field;\r\n            const e =  new KeyboardEvent(\"keydown\", {bubbles : true, cancelable : true, keyCode : 13, shiftKey : false});\r\n            elem.dispatchEvent(e);\r\n        }\r\n    }    \r\n\r\n    enterPress = (e) => {\r\n        if (e.keyCode===13){\r\n            if(!e.shiftKey){\r\n                e.preventDefault();\r\n                if(this.state.inputValue){\r\n                    let stringWithoutSpace = this.state.inputValue;\r\n                    stringWithoutSpace = stringWithoutSpace.trim();\r\n                    if(stringWithoutSpace){\r\n                        this.sendMessage(this.state.inputValue)\r\n                    }\r\n                }\r\n                // console.log(e.target.value)\r\n                this.setState({\r\n                    inputValue: ''\r\n                  });\r\n                e.target.value = '';\r\n            }\r\n        }\r\n    }\r\n        \r\n    sendMessage = (from, message) => {\r\n            const {messagestoreService} = this.props;\r\n            messagestoreService.sendMessage(from, message);\r\n            }\r\n \r\n\r\n    render(){\r\n        return <div className = 'textareaContainer'>\r\n                <textarea\r\n                    onChange = {(event) => this.updateInputValue(event)}\r\n                    onKeyDown={(event) => {this.enterPress(event)}}\r\n                    className =\"form\" placeholder=\"Write a message...\">\r\n                </textarea>\r\n                <button onClick = {() => {this.pressButton()}} className = 'btn btn-primary'>Send</button>\r\n                </div>\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n// onClick = {() => sendMessage(textarea.value)}\r\nexport default withMessageStoreService()(EntryField);","import EntryField from './entry-field';\r\n\r\nexport default EntryField;","import React from 'react';\r\nimport MessageList from '../components/message-list';\r\nimport Header from '../components/header';\r\nimport EntryField from '../components/entry-field';\r\nimport './home-page.css';\r\n\r\n\r\nconst HomePage = () => {\r\n    return <>\r\n        <Header />\r\n        <main>\r\n         <MessageList q='1'/>\r\n         <EntryField />\r\n         </main>\r\n        </>\r\n}\r\n\r\nexport default HomePage","import React from 'react';\r\nimport Header from '../components/header'\r\n\r\nconst MessagePage = () => {\r\n    return <div>\r\n        <Header />\r\n        Message page\r\n        </div>\r\n}\r\n\r\nexport default MessagePage","import App from './app';\r\n\r\nexport default App;","import React from 'react';\r\n\r\nimport './app.css';\r\nimport {Route, Switch} from 'react-router-dom';\r\nimport {HomePage, MessagePage} from '../../pages'\r\n\r\nconst App = () => {\r\n\r\n    return (<Switch>\r\n                <Route path = '/' component = {HomePage} exact/>\r\n                <Route path = '/message' component = {MessagePage}/>\r\n            </Switch>)\r\n}\r\n\r\nexport default App;","import ErrorIndicator from './error-indicator';\r\n\r\nexport default ErrorIndicator;","import React from 'react';\r\nimport './error-indicator.css';\r\n\r\nconst ErrorIndicator = () => {\r\n    return <div>ErrorIndicator</div>\r\n}\r\n\r\nexport default ErrorIndicator;","import ErrorBoundry from './error-boundry';\r\n\r\nexport default ErrorBoundry;","import React, {Component} from 'react';\r\nimport ErrorIndicator from '../error-indicator'\r\n\r\nexport default class ErrorBoundry extends Component {\r\n\r\n    state = {\r\n        hasError: false\r\n    }\r\n\r\n    componentDidCatch() {\r\n        this.setState({ hasError: true })\r\n    }\r\n\r\n    render(){\r\n       if (this.state.hasError){return <ErrorIndicator />} \r\n       return this.props.children;\r\n    }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter as Router} from 'react-router-dom';\r\n\r\nimport App from './components/app';\r\nimport ErrorBoundry from './components/error-boundry';\r\nimport MessagestoreService from './services/messegestore-service';\r\nimport  {MessagestoreServiceProvider} from './components/messagestore-service-context';\r\nimport store from './store';\r\n\r\n\r\nconst messagestoreService = new MessagestoreService();\r\n\r\nReactDOM.render(\r\n            <Provider store = { store }>\r\n                <ErrorBoundry>\r\n                    <MessagestoreServiceProvider value = {messagestoreService}>\r\n                        <Router>\r\n                            <App/>\r\n                        </Router>\r\n                    </MessagestoreServiceProvider>\r\n                </ErrorBoundry>    \r\n            </Provider>\r\n, document.getElementById('root')\r\n);"],"sourceRoot":""}